{"ast":null,"code":"var _jsxFileName = \"/Users/kelseaconrad/AI-Writing-Dashboard/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Editor, EditorState } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n  const [suggestion, setSuggestion] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const editorRef = useRef(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setSuggestion(\"\"); // clear previous suggestion\n\n    // Extract plain text from Draft.js content state\n    const content = editorState.getCurrentContent();\n    const prompt = content.getPlainText();\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/suggest\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      if (data.suggestion) {\n        setSuggestion(data.suggestion);\n      } else {\n        setSuggestion(\"No suggestion received.\");\n      }\n    } catch (error) {\n      setSuggestion(\"Error: Could not connect to the server.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetch(\"/\").then(response => response.text()).then(data => console.log(data)).catch(error => console.error(\"Error connecting to backend:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Writing Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          padding: \"10px\",\n          minHeight: \"200px\",\n          marginBottom: \"10px\"\n        },\n        onClick: () => editorRef().current.focus(),\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          editorState: editorState,\n          onChange: setEditorState,\n          placeholder: \"Enter your writing prompt here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          marginTop: \"10px\"\n        },\n        children: loading ? \"Loading...\" : \"Get Suggestion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), suggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Suggestion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: suggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"BytKyhvrXr8SpNjAp79z5Vf5K7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Editor","EditorState","jsxDEV","_jsxDEV","App","_s","editorState","setEditorState","createEmpty","suggestion","setSuggestion","loading","setLoading","editorRef","handleSubmit","e","preventDefault","content","getCurrentContent","prompt","getPlainText","response","fetch","method","headers","body","JSON","stringify","data","json","error","then","text","console","log","catch","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","border","minHeight","marginBottom","onClick","current","focus","onChange","placeholder","type","disabled","marginTop","_c","$RefreshReg$"],"sources":["/Users/kelseaconrad/AI-Writing-Dashboard/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Editor, EditorState } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\n\nfunction App() {\n\tconst [editorState, setEditorState] = useState(() =>\n\t\tEditorState.createEmpty()\n\t);\n\n\tconst [suggestion, setSuggestion] = useState(\"\");\n\tconst [loading, setLoading] = useState(false);\n\n\tconst editorRef = useRef(null);\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tsetLoading(true);\n\t\tsetSuggestion(\"\"); // clear previous suggestion\n\n\t\t// Extract plain text from Draft.js content state\n\t\tconst content = editorState.getCurrentContent();\n\t\tconst prompt = content.getPlainText();\n\n\t\ttry {\n\t\t\tconst response = await fetch(\"http://127.0.0.1:5000/api/suggest\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ prompt }),\n\t\t\t});\n\n\t\t\tconst data = await response.json();\n\t\t\tif (data.suggestion) {\n\t\t\t\tsetSuggestion(data.suggestion);\n\t\t\t} else {\n\t\t\t\tsetSuggestion(\"No suggestion received.\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetSuggestion(\"Error: Could not connect to the server.\");\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfetch(\"/\")\n\t\t\t.then((response) => response.text())\n\t\t\t.then((data) => console.log(data))\n\t\t\t.catch((error) => console.error(\"Error connecting to backend:\", error));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\" style={{ padding: \"20px\" }}>\n\t\t\t<h1>AI Writing Dashboard</h1>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tborder: \"1px solid #ddd\",\n\t\t\t\t\t\tpadding: \"10px\",\n\t\t\t\t\t\tminHeight: \"200px\",\n\t\t\t\t\t\tmarginBottom: \"10px\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => editorRef().current.focus()}\n\t\t\t\t>\n\t\t\t\t\t<Editor\n\t\t\t\t\t\teditorState={editorState}\n\t\t\t\t\t\tonChange={setEditorState}\n\t\t\t\t\t\tplaceholder=\"Enter your writing prompt here...\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\" disabled={loading} style={{ marginTop: \"10px\" }}>\n\t\t\t\t\t{loading ? \"Loading...\" : \"Get Suggestion\"}\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t{suggestion && (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Suggestion:</h2>\n\t\t\t\t\t<p>{suggestion}</p>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}